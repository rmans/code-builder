---
type: tasks
id: {{id}}
title: {{title}}
status: draft
owner: {{owner}}
created: {{created}}
priority: 5
agent_type: general
tags: []
# ABC Iteration Support (optional)
requires_abc_iteration: false
abc_target_file: ""
abc_rounds: 3
links:
  prd: {{links.prd | default([])}}
  arch: {{links.arch | default([])}}
  ux: {{links.ux | default([])}}
  impl: {{links.impl | default([])}}
  exec: {{links.exec | default([])}}
---

# {{title}}

## Description
<!-- Brief description of what this task accomplishes -->

## 5-Phase Agent Workflow

> **Note**: This task follows the standardized 5-phase agent workflow built into this template.

### Phase 1: ðŸš€ Implementation
**Goal**: Build the core functionality
- [ ] Analyze requirements and acceptance criteria
- [ ] Design the solution architecture
- [ ] Write the main implementation code
- [ ] Create necessary data structures and models
- [ ] Implement core business logic
- [ ] Add error handling and validation
- [ ] Ensure code follows project standards

### Phase 2: ðŸ§ª Testing
**Goal**: Verify functionality and quality
- [ ] Write unit tests for all functions
- [ ] Create integration tests for workflows
- [ ] Test edge cases and error conditions
- [ ] Run test suite and ensure 100% pass rate
- [ ] Verify test coverage meets requirements
- [ ] Test with different data scenarios
- [ ] Validate performance requirements

### Phase 3: ðŸ“š Documentation
**Goal**: Make code maintainable and understandable
- [ ] Add comprehensive docstrings to functions
- [ ] Document API endpoints with examples
- [ ] Update README with setup instructions
- [ ] Create inline comments for complex logic
- [ ] Document configuration and environment variables
- [ ] Update architecture documentation
- [ ] Create usage examples and tutorials

### Phase 4: ðŸ§¹ Cleanup
**Goal**: Ensure code quality and organization
- [ ] Remove temporary files and test artifacts
- [ ] Run code formatter (prettier, black, etc.)
- [ ] Fix linting errors and warnings
- [ ] Remove unused imports and variables
- [ ] Organize file structure and imports
- [ ] Remove debug logs and console statements
- [ ] Clean up workspace and cache files

### Phase 5: ðŸ’¾ Commit
**Goal**: Save work and prepare for review
- [ ] Review all changes before committing
- [ ] Stage files with `git add`
- [ ] Create meaningful commit message
- [ ] Push changes to repository
- [ ] Create pull request if required
- [ ] Update task status to completed
- [ ] Notify stakeholders of completion

## Acceptance Criteria
- [ ] Criterion 1
- [ ] Criterion 2
- [ ] Criterion 3

## Implementation Details
<!-- Describe how to implement this task -->

## Command to Execute
```bash
# Phase 1: Implementation
echo "ðŸš€ Starting implementation phase..."
# Add implementation commands here

# Phase 2: Testing  
echo "ðŸ§ª Running tests..."
npm test

# Phase 3: Documentation
echo "ðŸ“š Generating documentation..."
npm run docs

# Phase 4: Cleanup
echo "ðŸ§¹ Cleaning up artifacts..."
python3 builder/core/cli.py cleanup:artifacts --check-agents --clean

# Phase 5: Commit
echo "ðŸ’¾ Committing changes..."
git add . && git commit -m "feat: implement {{title}}"
```

## Dependencies
<!-- List any task dependencies -->

## Notes
<!-- Additional notes, considerations, or context -->
